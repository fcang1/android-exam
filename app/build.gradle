plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    signingConfigs {
        release {
            storeFile file('/Users/franklindavidang/Desktop/General Files/Personal Files/Development/Android Studio/Keystores/uPraxisExamKeyStore')
            storePassword 'storePassword'
            keyPassword 'keyPassword'
            keyAlias 'keyAlias'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.upraxisexam"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "server"
    productFlavors {
        // Server flavors
        mock {
            dimension "server"
            buildConfigField 'String', 'API_BASE_URL', '"https://upraxis-exam-ang.herokuapp.com/"'
        }
        prod {
            dimension "server"
            buildConfigField 'String', 'API_BASE_URL', '"https://upraxis-exam-ang.herokuapp.com/"'
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if ( names.contains("mock") && variant.buildType.name == 'release') {
            setIgnore(true)
        }
        if ( names.contains("prod") && variant.buildType.name == 'debug') {
            setIgnore(true)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def fileName = "${applicationId}-v${versionName}.${versionCode}-${variant.productFlavors[0].name}-${variant.buildType.name}.apk"
                outputFileName = fileName
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def lifecycle_version = "2.3.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    def room_version = "2.3.0"
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    def retrofit_version = "2.9.0"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // Gson Converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
}